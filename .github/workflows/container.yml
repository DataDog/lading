name: Container

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tagging:
    name: Determine Tags
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      FINAL_TAG: ${{ steps.tags.outputs.FINAL_TAG }}
      SHA_TAG: ${{ steps.tags.outputs.SHA_TAG }}

    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Extract Docker Metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag event produce a semver tag. This will capture tags that begin
            # vX.Y.Z and X.Y.Z.
            type=semver,pattern={{version}},event=tag
            # All other push events (no PR, no semver tag), produce a SHA tag
            type=sha,format=long

      - name: Determine Final Tag
        id: tags
        run: |
          ALL_TAGS="${{ steps.meta.outputs.tags }}"
          SEMVER_TAG=$(echo "$ALL_TAGS" | grep -E '^ghcr.io/.+:[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)?' || true)
          SHA_TAG=$(echo "$ALL_TAGS" | grep sha- || true)

          if [ -n "$SEMVER_TAG" ]; then
            FINAL_TAG="$SEMVER_TAG"
          else
            FINAL_TAG="$SHA_TAG"
          fi

          echo "SHA_TAG=$SHA_TAG" >> $GITHUB_OUTPUT
          echo "FINAL_TAG=$FINAL_TAG" >> $GITHUB_OUTPUT

      - name: Debug Tags
        run: |
          echo "SHA_TAG: ${{ steps.tags.outputs.SHA_TAG }}"
          echo "FINAL_TAG: ${{ steps.tags.outputs.FINAL_TAG }}"

  build:
    needs: tagging
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-24.04
          - arch: arm64
            runner: arm-4core-linux-ubuntu24.04
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          sparse-checkout: .

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: Dockerfile
          tags: ${{ needs.tagging.outputs.SHA_TAG }}-${{ matrix.arch }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/datadog/lading:cache
          cache-to: type=registry,ref=ghcr.io/datadog/lading:cache,mode=max

  manifest:
    name: Create Multi-Arch Manifest
    needs:
      - tagging
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Create and Push Multiarch Manifest
        run: |
          docker buildx imagetools create \
            --tag "${{ needs.tagging.outputs.FINAL_TAG }}" \
            "${{ needs.tagging.outputs.SHA_TAG }}-amd64" \
            "${{ needs.tagging.outputs.SHA_TAG }}-arm64"
