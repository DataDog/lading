name: Continuous integration

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  cargo-deny: # only runs on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1

  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1.3.7
      - name: Install protobuf (Apt)
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
        if: matrix.os == 'ubuntu-latest'
      - name: Install protobuf (Brew)
        run: brew install protobuf
        if: matrix.os == 'macos-latest'
      - run: cargo check

  fmt:
    name: Rustfmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1.3.7
        with:
          components: rustfmt
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy_check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1.3.7
        with:
          components: clippy
      - name: Install protobuf (Apt)
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
        if: matrix.os == 'ubuntu-latest'
      - name: Install protobuf (Brew)
        run: brew install protobuf
        if: matrix.os == 'macos-latest'
      - run: cargo clippy --all-features

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1.3.7
      - name: Install protobuf (Apt)
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: cargo nextest run

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1.3.7
      - name: Install protobuf (Apt)
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - run: cargo test -p sheepdog
        timeout-minutes: 30


  kani:
    name: Kani Proofs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: [lading_throttle, lading_payload]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1.3.7
      - name: Install protobuf (Apt)
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Install kani
        run: cargo install kani-verifier
      - run: cargo kani --solver cadical
        working-directory: ${{ matrix.crate }}
        timeout-minutes: 30

  buf:
    runs-on: ubuntu-latest
    steps:
      # Check our protobufs for lint cleanliness and for lack of breaking
      # changes
      - uses: actions/checkout@v3
      - name: buf-setup
        uses: bufbuild/buf-setup-action@v1.15.0
      - name: buf-lint
        uses: bufbuild/buf-lint-action@v1.0.3
      - name: buf-breaking
        uses: bufbuild/buf-breaking-action@v1.1.2
        with:
          against: 'https://github.com/datadog/lading.git#branch=main'
